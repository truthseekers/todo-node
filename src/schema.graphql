type Query {
  info: String!
  feed: [Link!]!
  lists: [List!]!
  listById(listId: ID!): List
  todoById(todoId: ID!): Todo
  todos: [Todo!]!
  me: User!
}

type Mutation {
  post(url: String!, description: String!): Link!
  newList(title: String!): List!
  createTodo(name: String!, listId: ID!): Todo
  deleteTodo(todoId: ID!): Todo
  deleteList(listId: ID!): DeleteListResponse
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type DeleteListResponse {
  list: List!
  todos: [Todo]!
}

type Link {
  id: ID!
  description: String!
  url: String!
  postedBy: User
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  todos: [Todo!]!
  lists: [List!]!
  links: [Link!]!
}

type List {
  id: ID!
  title: String!
  todos: [Todo!]
  postedBy: User
}

type BatchPayload {
  count: Int
}

type Todo {
  id: ID!
  list: List!
  listId: Int
  isCompleted: Boolean!
  name: String!
  postedBy: User
}
